name: deploy
on:
  push:
    branches:
      - ci
  # release:
  #   types: [published]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.3
      - uses: cachix/install-nix-action@v11
        with:
          skip_adding_nixpkgs_channel: true
      - uses: cachix/cachix-action@v6
        with:
          name: thalesmg
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
      - name: set tag
        id: tag
        run: echo "::set-output name=tag::$(date +'%Y%m%d-%H%M%S')"
      - name: build image
        run: nix-build --argstr tag ${{ steps.tag.outputs.tag }} docker.nix
      - name: docker login
        uses: docker/login-action@v1.4.1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: load and push result
        run: |
          docker load < result
          docker tag soldo:${{ steps.tag.outputs.tag }} $DOCKER_REGISTRY/$DOCKER_USERNAME/$DOCKER_IMAGE
          docker push $DOCKER_REGISTRY/$DOCKER_USERNAME/$DOCKER_IMAGE
        env:
          DOCKER_REGISTRY: ghcr.io
          DOCKER_USERNAME: ${{ github.repository_owner }}
          DOCKER_IMAGE: soldo:${{ steps.tag.outputs.tag }}
      - uses: dhall-lang/setup-dhall@v4
        with:
          version: '1.34.0'
          github_token: ${{ github.token }}
      - name: create manifests
        run: |
          mkdir -p manifests
          dhall-to-yaml --omit-empty > manifests/deployment.yaml <<< '(./deployment/manifests.dhall).deployment'
          dhall-to-yaml --omit-empty > manifests/service.yaml <<< '(./deployment/manifests.dhall).service'
        env:
          DOCKER_REGISTRY: ghcr.io
          DOCKER_USERNAME: ${{ github.repository_owner }}
          DOCKER_TAG: ${{ steps.tag.outputs.tag }}
      - uses: okteto/login@master
        with:
          token: ${{ secrets.OKTETO_TOKEN }}
      - name: activate personal namespace
        uses: okteto/namespace@master
        with:
          name: thalesmg
      - name: create deployment
        uses: okteto/apply@master
        with:
          manifest: manifests/
